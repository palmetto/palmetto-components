@import '~@palmetto/palmetto-design-tokens/build/scss/variables-size';

@mixin floating-label-minimize-md {
  opacity: 0.75;
  transform: scale(0.6875) translateY(-0.3rem) translateX(0.15rem);
}

@mixin floating-label-minimize-lg {
  opacity: 0.75;
  transform: scale(0.75) translateY(-0.3rem) translateX(0.15rem);
}

@mixin size-md {
  border-radius: var(
    --form-control-size-md-border-radius,
    var(--INTERNAL_form-control-size-md-border-radius)
  );
  font-size: var(
    --form-control-size-sm-font-size,
    var(--INTERNAL_form-control-size-sm-font-size)
  );

  .select-input-label {
    padding: var(
      --form-control-size-md-padding,
      var(--INTERNAL_form-control-size-md-padding)
    );
  }

  &::before,
  &::after {
    top: calc(var(--size-spacing-md) + 3px);
  }

  select {
    padding: calc(
        var(
            --form-control-size-lg-padding,
            var(--INTERNAL_form-control-size-lg-padding)
          ) + 3px
      )
      var(--size-spacing-3xl)
      calc(
        var(
            --form-control-size-md-padding,
            var(--INTERNAL_form-control-size-md-padding)
          ) - 5px
      )
      var(
        --form-control-size-md-padding,
        var(--INTERNAL_form-control-size-sm-padding)
      );
    border-radius: var(
      --form-control-size-md-border-radius,
      var(--INTERNAL_form-control-size-md-border-radius)
    );

    &:focus {
      + .select-input-label {
        @include floating-label-minimize-md;
      }
    }

    &:not(:placeholder-shown) ~ label {
      @include floating-label-minimize-md;
    }
  }

  .clear-button {
    padding: var(
      --form-control-size-md-padding,
      var(--INTERNAL_form-control-size-md-padding)
    );
  }
}

%size-md {
  @include size-md;
}

.size-md {
  @extend %size-md;
}

@mixin size-lg {
  border-radius: var(
    --form-control-size-lg-border-radius,
    var(--INTERNAL_form-control-size-lg-border-radius)
  );
  font-size: var(
    --form-control-size-md-font-size,
    var(--INTERNAL_form-control-size-md-font-size)
  );

  .select-input-label {
    padding: var(
      --form-control-size-lg-padding,
      var(--INTERNAL_form-control-size-lg-padding)
    );
  }

  &::before,
  &::after {
    top: calc(var(--size-spacing-md) + 9px);
  }

  select {
    padding: calc(
        var(
            --form-control-size-lg-padding,
            var(--INTERNAL_form-control-size-lg-padding)
          ) + 10px
      )
      var(--size-spacing-3xl)
      calc(
        var(
            --form-control-size-lg-padding,
            var(--INTERNAL_form-control-size-lg-padding)
          ) - 5px
      )
      var(
        --form-control-size-lg-padding,
        var(--INTERNAL_form-control-size-md-padding)
      );
    border-radius: var(
      --form-control-size-lg-border-radius,
      var(--INTERNAL_form-control-size-lg-border-radius)
    );

    &:focus {
      + .select-input-label {
        @include floating-label-minimize-lg;
      }
    }

    &:not(:placeholder-shown) ~ label {
      @include floating-label-minimize-lg;
    }
  }

  .clear-button {
    padding: var(
        --form-control-size-lg-padding,
        var(--INTERNAL_form-control-size-lg-padding)
      )
      var(
        --form-control-size-lg-padding,
        var(--INTERNAL_form-control-size-lg-padding)
      )
      var(
        --form-control-size-lg-padding,
        var(--INTERNAL_form-control-size-lg-padding)
      )
      0;
  }
}

%size-lg {
  @include size-lg;
}

.size-lg {
  @extend %size-lg;
}

// https://stackoverflow.com/questions/262158/disabled-input-text-color-on-ios
%disabled-base {
  background-color: var(
    --form-control-background-color-disabled,
    var(--color-background-form-control-disabled)
  );
  color: var(--form-control-font-color-disabled, var(--color-text-disabled));
  -webkit-text-fill-color: var(
    --form-control-font-color-disabled,
    var(--color-text-disabled)
  );
  opacity: 1;

  &:hover {
    cursor: not-allowed;
  }
}

.select-input-label {
  position: absolute;
  top: 0;
  font-size: 1rem;
  transform-origin: 0 0;
  transition: opacity 0.1s ease-in-out, transform 0.1s ease-in-out;
  font-weight: --form-control-label-font-weight,
    var(--INTERNAL_form-control-label-font-weigh);
  color: var(--color-text-body-primary);
  cursor: text;
  white-space: nowrap;
}

.text-input-wrapper {
  font-family: var(--asset-fonts-body);
  position: relative;
  box-shadow: var(
      --form-control-box-shadow,
      var(--INTERNAL_form-control-box-shadow)
    ),
    inset 0 0 0 1px var(--color-border-separator);
  background-color: var(
    --form-control-background-color,
    var(--color-background-form-control)
  );

  &::before,
  &::after {
    border-radius: 100px;
    content: '';
    position: absolute;
    background: var(--color-brand-grey-300);
    pointer-events: none;
    width: 10px;
    height: 2px;
  }

  //change the stacking context so this half of the chevron stays above the disabled background color.
  &::before {
    right: calc(var(--size-spacing-sm) + 7px);
    transform-origin: 50% 50%;
    transform: rotate(42deg);
    z-index: 1;
  }

  &::after {
    right: calc(var(--size-spacing-sm) + 1px);
    transform-origin: 50% 50%;
    transform: rotate(-42deg);
  }

  &.size-md {
    @extend %size-md;
  }

  &.size-lg {
    @extend %size-lg;
  }

  @media (min-width: $size-breakpoint-tablet) {
    &.size-md-tablet {
      @include size-md;
    }

    &.size-lg-tablet {
      @include size-lg;
    }
  }

  @media (min-width: $size-breakpoint-desktop) {
    &.size-md-desktop {
      @include size-md;
    }

    &.size-lg-desktop {
      @include size-lg;
    }
  }

  @media (min-width: $size-breakpoint-hd) {
    &.size-md-hd {
      @include size-md;
    }

    &.size-lg-hd {
      @include size-lg;
    }
  }

  // border and background is set on the text-input-wrapper
  select {
    appearance: none;
    box-sizing: border-box;
    display: flex;
    transition-duration: 300ms;
    transition-property: border, background-color;
    transition-timing-function: cubic-bezier(0.2, 0.8, 0.4, 1);
    border: none;
    background-color: transparent;
    width: 100%;
    line-height: var(--form-control-line-height, var(--size-line-height-input));
    color: var(--color-text-contrast);

    &::placeholder {
      color: transparent;
    }

    &:focus {
      outline: none;
      border-color: var(
        --form-control-border-color-focus,
        var(--INTERNAL_form-control-border-color-focus)
      );
    }

    &:disabled {
      @extend %disabled-base;

      background-color: transparent;

      + .select-input-label {
        cursor: not-allowed;
      }
    }
  }

  &.error {
    box-shadow: var(
        --form-control-box-shadow,
        var(--INTERNAL_form-control-box-shadow)
      ),
      inset 0 0 0 1px
        var(--form-control-border-color-error, var(--color-border-danger));
    background-color: var(
      --form-control-background-color-error,
      var(--color-background-form-control-error)
    );

    &:focus-within {
      background-color: var(--color-background-form-control);
    }

    select:focus {
      outline: none;
      background-color: transparent;
    }
  }

  //Necessary so that inset shadow that we use for border does not get covered by child elements.
  &:not(.error) {
    > * {
      &:focus,
      &.disabled {
        &:not(input) {
          box-shadow: inset 0 1px 0 0
              var(
                --form-control-box-shadow-focus,
                var(--INTERNAL_form-control-box-shadow-focus)
              ),
            inset 0 -1px 0 0 var(--form-control-border-color-focus, var(--INTERNAL_form-control-border-color-focus));
        }
      }
    }
  }

  &:focus-within {
    outline: none;
    box-shadow: var(
        --form-control-box-shadow-focus,
        var(--INTERNAL_form-control-box-shadow-focus)
      ),
      inset 0 0 0 1px
        var(
          --form-control-border-color-focus,
          var(--INTERNAL_form-control-border-color-focus)
        );
  }

  &.disabled {
    @extend %disabled-base;
  }

  // Reset default button styles
  .clear-button {
    position: absolute;
    right: var(--size-spacing-xl);
    transition-duration: 0.2s;
    transition-property: color;
    border: 0;
    border-radius: 0;
    background: none;
    cursor: pointer;
    color: var(--color-text-body-tertiary);
    font-style: inherit;
    height: 100%;

    &:hover {
      color: var(--color-text-body-secondary);
    }
  }
}
