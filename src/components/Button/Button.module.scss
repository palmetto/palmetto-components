@import '~@palmetto/palmetto-design-tokens/build/scss/variables-size';

@mixin size-xs {
  border-radius: var(--button-size-xs-border-radius, var(--form-control-size-sm-border-radius));
  padding: var(--button-size-xs-padding-vertical, var(--size-spacing-2xs))
    var(--button-size-xs-padding-horizontal, var(--size-spacing-xs));
  min-height: 20px;
  font-size: var(--button-size-xs-font-size, var(--form-control-size-xs-font-size));
  letter-spacing: 0.2px;

  &.outline {
    padding: calc(var(--button-size-xs-padding-vertical, var(--size-spacing-2xs)) - 1px)
      calc(var(--button-size-xs-padding-horizontal, var(--size-spacing-xs)) - 1px);
  }
}

%size-xs { @include size-xs; }
.size-xs { @extend %size-xs; }

@mixin size-sm {
  border-radius: var(--button-size-sm-border-radius, var(--form-control-size-sm-border-radius));
  padding: var(--button-size-sm-padding-vertical, var(--form-control-size-sm-padding))
    var(--button-size-sm-padding-horizontal, var(--size-spacing-sm));
  min-height: 32px;
  font-size: var(--button-size-sm-font-size, var(--form-control-size-sm-font-size));
  letter-spacing: 0.2px;

  &.outline {
    padding: calc(var(--button-size-sm-padding-vertical, var(--form-control-size-sm-padding)) - 1px)
      calc(var(--button-size-sm-padding-horizontal, var(--size-spacing-sm)) - 1px);
  }
}

%size-sm { @include size-sm; }
.size-sm { @extend %size-sm; }

@mixin size-md {
  border-radius: var(--button-size-md-border-radius, var(--form-control-size-md-border-radius));
  padding: var(--button-size-md-padding-vertical, var(--form-control-size-md-padding))
    var(--button-size-md-padding-horizontal, var(--size-spacing-md));
  min-height: 42px;
  font-size: var(--button-size-md-font-size, var(--form-control-size-md-font-size));
  letter-spacing: 0.2px;

  &.outline {
    padding: calc(var(--button-size-md-padding-vertical, var(--form-control-size-md-padding)) - 1px)
      calc(var(--button-size-md-padding-horizontal, var(--size-spacing-md)) - 1px);
  }
}

%size-md { @include size-md; }
.size-md { @extend %size-md; }

@mixin size-lg {
  border-radius: var(--button-size-lg-border-radius, var(--form-control-size-lg-border-radius));
  padding: var(--button-size-lg-padding-vertical, var(--form-control-size-lg-padding))
    var(--button-size-lg-padding-horizontal, var(--size-spacing-lg));
  min-height: 55px;
  letter-spacing: 1px;
  font-size: var(--button-size-lg-font-size, var(--form-control-size-lg-font-size));

  &.outline {
    padding: calc(var(--button-size-lg-padding-vertical, var(--form-control-size-lg-padding)) - 1px)
      calc(var(--button-size-lg-padding-horizontal, var(--size-spacing-lg)) - 1px);
  }
}

%size-lg { @include size-lg; }
.size-lg { @extend %size-lg; }

.button {
  border: 0;
  cursor: pointer;
  background-color: transparent;
  padding: 0;
  color: inherit;
  line-height: 1;
  font-family: var(--button-font-family, var(--asset-fonts-body));

  &:not(.naked) {
    display: inline-block;
    position: relative;
    transition-duration: 0.2s;
    transition-property: background-color, border, box-shadow, color;
    transition-timing-function: cubic-bezier(0.67, 0.83, 0.67);
    text-align: center;
    text-decoration: none;
    font-weight: var(--button-font-weight, var(--size-font-weight-bold));
  }

  &:hover {
    text-decoration: none;
  }

  &:disabled {
    opacity: 0.65;
    cursor: not-allowed;
  }

  /* Hide focus styles if they're not needed, for example,
  when an element receives focus via the mouse. */
  &:focus:not(:focus-visible) {
    outline: 0;
    box-shadow: none;
  }

  &.outline {
    border: 1px solid;
  }

  &.primary {
    background-color: var(--button-primary-background-color, var(--color-brand-primary-500));
    color: var(--button-primary-font-color, var(--color-brand-white-base));

    /* define regular focus styles for non-supporting browsers */
    &:focus {
      outline: 0;
      box-shadow: var(--button-primary-box-shadow-focus, var(--input-focus-box-shadow));
    }

    /* Show focus styles on keyboard focus. */
    &:focus-visible {
      outline: 0;
      box-shadow: var(--button-primary-box-shadow-focus, var(--input-focus-box-shadow));
    }

    &:not(:disabled):hover {
      background-color: var(--button-primary-background-color-hover, var(--color-brand-primary-600));
      color: var(--button-primary-font-color-hover, var(--color-brand-white-base));
    }

    &.outline {
      border-color: var(--button-primary-outline-border-color, var(--color-brand-primary-500));
      background-color: var(--button-primary-outline-background-color, transparent);
      color: var(--button-primary-outline-font-color, var(--color-brand-primary-500));

      &:not(:disabled):hover {
        border-color: var(--button-primary-outline-border-color-hover, var(--color-brand-primary-500));
        background-color: var(--button-primary-outline-background-color-hover, var(--color-brand-primary-50));
        color: var(--button-primary-outline-font-color-hover, var(--color-brand-primary-500));
      }
    }
  }

  &.success {
    background-color: var(--button-success-background-color, var(--color-brand-success-500));
    color: var(--button-success-font-color, var(--color-brand-white-base));

    /* define regular focus styles for non-supporting browsers */
    &:focus {
      outline: 0;
      box-shadow: var(--button-success-box-shadow-focus, var(--input-focus-box-shadow));
    }

    /* Show focus styles on keyboard focus. */
    &:focus-visible {
      outline: 0;
      box-shadow: var(--button-success-box-shadow-focus, var(--input-focus-box-shadow));
    }

    &:not(:disabled):hover {
      background-color: var(--button-success-background-color-hover, var(--color-brand-success-600));
      color: var(--button-success-font-color-hover, var(--color-brand-white-base));
    }

    &.outline {
      border-color: var(--button-success-outline-border-color, var(--color-brand-success-500));
      background-color: transparent;
      color: var(--button-success-font-color, var(--color-brand-success-500));

      &:not(:disabled):hover {
        border-color: var(--button-success-outline-border-color-hover, var(--color-brand-success-500));
        background-color: var(--button-success-outline-background-color-hover, var(--color-brand-success-50));
        color: var(--button-success-outline-font-color-hover, var(--color-brand-success-500));
      }
    }
  }

  &.danger {
    background-color: var(--button-danger-background-color, var(--color-brand-danger-500));
    color: var(--button-danger-font-color, var(--color-brand-white-base));

    &:focus {
      outline: 0;
      box-shadow: var(--button-focus-box-shadow-danger, 0 0 0 4px var(--color-brand-danger-200));
    }

    &:focus-visible {
      outline: 0;
      box-shadow: var(--button-focus-box-shadow-danger, 0 0 0 4px var(--color-brand-danger-200));
    }

    &:focus:not(:focus-visible) {
      outline: 0;
      box-shadow: none;
    }

    &:not(:disabled):hover {
      background-color: var(--button-danger-background-color-hover, var(--color-brand-danger-600));
      color: var(--button-danger-font-color-hover, var(--color-brand-white-base));
    }

    &.outline {
      border-color: var(--button-danger-outline-border-color, var(--color-brand-danger-500));
      background-color: transparent;
      color: var(--button-danger-font-color, var(--color-brand-danger-500));

      &:not(:disabled):hover {
        border-color: var(--button-danger-outline-border-color-hover, var(--color-brand-danger-500));
        background-color: var(--button-danger-outline-background-color-hover, var(--color-brand-danger-50));
        color: var(--button-danger-outline-font-color-hover, var(--color-brand-danger-500));
      }
    }
  }

  &.dark {
    background-color: var(--button-dark-background-color, var(--color-brand-dark-base));
    color: var(--button-dark-font-color, var(--color-brand-white-base));

    &:focus {
      outline: 0;
      box-shadow: var(--button-dark-box-shadow-focus, 0 0 0 4px var(--color-brand-grey-200));
    }

    &:focus-visible {
      outline: 0;
      box-shadow: var(--button-dark-box-shadow-focus, 0 0 0 4px var(--color-brand-grey-200));
    }

    &:not(:disabled):hover {
      background-color: var(--button-dark-background-color-hover, var(--color-brand-black-base));
      color: var(--button-dark-font-color-hover, var(--color-brand-white-base));
    }

    &:focus:not(:focus-visible) {
      outline: 0;
      box-shadow: none;
    }

    &.outline {
      border-color: var(--button-border-color-dark-outline);
      background-color: transparent;
      color: var(--button-font-color-dark-outline, var(--color-brand-dark-base));

      &:not(:disabled):hover {
        border-color: var(--button-dark-outline-border-color, var(--color-brand-dark-base));
        background-color: var(--button-dark-outline-background-color-hover, var(--color-brand-grey-50));
        color: var(--button-font-color-dark-outline, var(--color-brand-dark-base));
      }
    }
  }

  &.light {
    background-color: var(--button-light-background-color, var(--color-brand-light-base));
    color: var(--button-light-font-color, var(--color-brand-dark-base));

    &:focus {
      outline: 0;
      box-shadow: var(--button-light-box-shadow-focus, 0 0 0 4px var(--color-brand-grey-200));
    }

    &:focus-visible {
      outline: 0;
      box-shadow: var(--button-light-box-shadow-focus, 0 0 0 4px var(--color-brand-grey-200));
    }

    &:not(:disabled):hover {
      background-color: var(--button-light-background-color-hover, var(--color-brand-grey-200));
      color: var(--button-light-font-color-hover, var(--color-brand-dark-base));
    }

    &:focus:not(:focus-visible) {
      outline: 0;
      box-shadow: none;
    }

    &.outline {
      border-color: var(--button-light-outline-border-color, var(--color-brand-light-base));
      background-color: transparent;
      color: var(--button-font-color-light-outline);

      &:not(:disabled):hover {
        border-color: var(--button-light-outline-border-color-hover, var(--color-brand-grey-300));
        background-color: var(--button-light-outline-background-color-hover, var(--color-brand-grey-50));
        color: var(--button-font-color-light-outline-hover, var(--color-brand-dark-base));
      }
    }
  }

  &.white {
    background-color: var(--button-white-background-color, var(--color-brand-white-base));
    color: var(--button-white-font-color, var(--color-brand-grey-600));

    &:focus {
      outline: 0;
      box-shadow: var(--button-white-box-shadow-focus, 0 0 0 4px var(--color-brand-grey-200));
    }

    &:focus-visible {
      outline: 0;
      box-shadow: var(--button-white-box-shadow-focus, 0 0 0 4px var(--color-brand-grey-200));
    }

    &:not(:disabled):hover {
      background-color: var(--button-white-background-color-hover, var(--color-brand-grey-50));
      color: var(--button-white-font-color-hover, var(--color-brand-grey-700));
    }

    &:focus:not(:focus-visible) {
      outline: 0;
      box-shadow: none;
    }

    &.outline {
      border-color: var(--button-white-outline-border-color, var(--color-brand-white-base));
      background-color: transparent;
      color: var(--button-font-color-white-outline, var(--color-brand-white-base));

      &:not(:disabled):hover {
        border-color: var(--button-white-outline-border-color-hover, var(--color-brand-white-base));
        background-color: var(--button-white-outline-background-color-hover, rgba(255, 255, 255, 0.1));
        color: var(--button-font-color-white-outline-hover, var(--color-brand-white-base));
      }
    }
  }

  &.xs {
    border-radius: var(--button-size-xs-border-radius);
    padding: var(--button-size-xs-padding-vertical) var(--button-size-xs-padding-horizontal);
    min-height: 20px;
    font-size: var(--button-size-xs-font-size);

    &.outline {
      padding: calc(var(--button-size-xs-padding-vertical) - 1px)
        calc(var(--button-size-xs-padding-horizontal) - 1px);
    }
  }

  &.sm {
    border-radius: var(--button-size-sm-border-radius);
    padding: var(--button-size-sm-padding-vertical) var(--button-size-sm-padding-horizontal);
    min-height: 32px;
    font-size: var(--button-size-sm-font-size);
  }

  &.size-xs { @extend %size-xs; }
  &.size-sm { @extend %size-sm; }
  &.size-md { @extend %size-md; }
  &.size-lg { @extend %size-lg; }

  @media (min-width: $size-breakpoint-tablet) {
    &.size-xs-tablet { @include size-xs; }
    &.size-sm-tablet { @include size-sm; }
    &.size-md-tablet { @include size-md; }
    &.size-lg-tablet { @include size-lg; }
  }

  @media (min-width: $size-breakpoint-desktop) {
    &.size-xs-desktop { @include size-xs; }
    &.size-sm-desktop { @include size-sm; }
    &.size-md-desktop { @include size-md; }
    &.size-lg-desktop { @include size-lg; }
  }

  @media (min-width: $size-breakpoint-hd) {
    &.size-xs-hd { @include size-xs; }
    &.size-sm-hd { @include size-sm; }
    &.size-md-hd {  @include size-md; }
    &.size-lg-hd { @include size-lg; }
  }

  &.loading {
    .label {
      visibility: hidden;
    }
  }

  &.full-width {
    width: 100%;
  }
}

.spinner-wrapper {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
